// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import grpc "google.golang.org/grpc"
import mock "github.com/stretchr/testify/mock"
import net "net"
import time "time"

import v1beta1 "k8s.io/kubernetes/pkg/kubelet/apis/deviceplugin/v1beta1"

// ResourceServerConnector is an autogenerated mock type for the ResourceServerConnector type
type ResourceServerConnector struct {
	mock.Mock
}

// Close provides a mock function with given fields: _a0
func (_m *ResourceServerConnector) Close(_a0 *grpc.ClientConn) {
	_m.Called(_a0)
}

// CreateServer provides a mock function with given fields:
func (_m *ResourceServerConnector) CreateServer() {
	_m.Called()
}

// DeleteServer provides a mock function with given fields:
func (_m *ResourceServerConnector) DeleteServer() {
	_m.Called()
}

// Dial provides a mock function with given fields: _a0, _a1
func (_m *ResourceServerConnector) Dial(_a0 string, _a1 time.Duration) (*grpc.ClientConn, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *grpc.ClientConn
	if rf, ok := ret.Get(0).(func(string, time.Duration) *grpc.ClientConn); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*grpc.ClientConn)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, time.Duration) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetServer provides a mock function with given fields:
func (_m *ResourceServerConnector) GetServer() *grpc.Server {
	ret := _m.Called()

	var r0 *grpc.Server
	if rf, ok := ret.Get(0).(func() *grpc.Server); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*grpc.Server)
		}
	}

	return r0
}

// Listen provides a mock function with given fields: _a0, _a1
func (_m *ResourceServerConnector) Listen(_a0 string, _a1 string) (net.Listener, error) {
	ret := _m.Called(_a0, _a1)

	var r0 net.Listener
	if rf, ok := ret.Get(0).(func(string, string) net.Listener); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(net.Listener)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Register provides a mock function with given fields: _a0, _a1
func (_m *ResourceServerConnector) Register(_a0 v1beta1.RegistrationClient, _a1 *v1beta1.RegisterRequest) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(v1beta1.RegistrationClient, *v1beta1.RegisterRequest) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Serve provides a mock function with given fields: _a0
func (_m *ResourceServerConnector) Serve(_a0 net.Listener) {
	_m.Called(_a0)
}

// Stop provides a mock function with given fields:
func (_m *ResourceServerConnector) Stop() {
	_m.Called()
}
